orbs:
  godel:
    orbs:
      go:
        executors:
          darwin-linux-no-cgo:
            parameters:
              owner:
                type: string
              repo:
                type: string
              version:
                type: string
                default: 1.10.3-t130
            docker:
              - image: nmiyake/go:go-darwin-linux-no-cgo-<< parameters.version >>
                environment:
                  CGO_ENABLED: 0
            working_directory: /go/src/github.com/<< parameters.owner >>/<< parameters.repo >>
        commands:
          setup:
            steps:
              - checkout
              - run: go version
    commands:
      setup:
        steps:
          - restore_cache:
              keys:
                - godel-cache-{{ checksum "godelw" }}-v1
          - run: ./godelw version
          - save_cache:
              key: godel-cache-{{ checksum "godelw" }}-v1
              paths:
                - ~/.godel
    jobs:
      verify:
        parameters:
          owner:
            type: string
          repo:
            type: string
          include-tests:
            type: boolean
            default: false
        executor:
          name: go/darwin-linux-no-cgo
          owner: << parameters.owner >>
          repo: << parameters.repo >>
        steps:
          - go/setup
          - setup
          - when:
              condition: << parameters.include-tests >>
              steps:
                - run: ./godelw verify --apply=false
          - unless:
              condition: << parameters.include-tests >>
              steps:
                - run: ./godelw verify --apply=false --skip-test
      test:
        parameters:
          owner:
            type: string
          repo:
            type: string
        executor:
          name: go/darwin-linux-no-cgo
          owner: << parameters.owner >>
          repo: << parameters.repo >>
        steps:
          - go/setup
          - setup
          - run: echo 'export TESTS_DIR=/tmp/test-results' >> $BASH_ENV
          - run: mkdir -p "${TESTS_DIR}"
          - run: ./godelw test --junit-output="$TESTS_DIR/$CIRCLE_PROJECT_REPONAME-tests.xml"
          - store_test_results:
              path: /tmp/test-results
          - store_artifacts:
              path: /tmp/test-results
              destination: test-results
      dist:
        parameters:
          owner:
            type: string
          repo:
            type: string
        executor:
          name: go/darwin-linux-no-cgo
          owner: << parameters.owner >>
          repo: << parameters.repo >>
        steps:
          - go/setup
          - setup
          - run: ./godelw dist
          - save_cache:
              key: dist-{{ .Environment.CIRCLE_WORKFLOW_ID }}-{{ .Environment.CIRCLE_SHA1 }}-v1
              paths:
                - out
      bintray-publish:
        parameters:
          owner:
            type: string
          repo:
            type: string
          product:
            type: string
        executor:
          name: go/darwin-linux-no-cgo
          owner: << parameters.owner >>
          repo: << parameters.repo >>
        steps:
          - go/setup
          - setup
          - restore_cache:
              keys:
                - dist-{{ .Environment.CIRCLE_WORKFLOW_ID }}-{{ .Environment.CIRCLE_SHA1 }}-v1
          # g√∂del cache only works if cached outputs are newer than source that generates it. CircleCI restore_cache restores
          # the cache with the original modification dates, but the source's modification date in CI is the time of checkout.
          # Manually touch all of the cache output to mark it as being generated after source was checked out.
          - run: find out -exec touch {} \;
          - run: ./godelw publish bintray --url https://api.bintray.com --subject palantir --repository releases --product << parameters.product >> --username "$BINTRAY_USERNAME" --password "$BINTRAY_PASSWORD" --publish --downloads-list

version: 2.1

workflows:
  version: 2
  build-publish:
    jobs:
      - godel/verify:
          name: verify
          owner: palantir
          repo: distgo
          include-tests: true
      - godel/test:
          name: test
          owner: palantir
          repo: distgo
      - godel/dist:
          name: dist
          owner: palantir
          repo: distgo
      - godel/bintray-publish:
          name: publish
          owner: palantir
          repo: distgo
          product: distgo
          requires:
            - verify
            - test
            - dist
          filters:
            tags:
              only: /^v?[0-9]+(\.[0-9]+)+(-rc[0-9]+)?(-alpha[0-9]+)?$/
            branches:
              ignore: /.*/
